[{"C:\\Users\\MY HP\\Desktop\\MiniProject\\todo\\mytodo\\src\\index.js":"1","C:\\Users\\MY HP\\Desktop\\MiniProject\\todo\\mytodo\\src\\App.js":"2","C:\\Users\\MY HP\\Desktop\\MiniProject\\todo\\mytodo\\src\\authComponent\\Login.js":"3","C:\\Users\\MY HP\\Desktop\\MiniProject\\todo\\mytodo\\src\\authComponent\\Signin.js":"4","C:\\Users\\MY HP\\Desktop\\MiniProject\\todo\\mytodo\\src\\Context.js":"5","C:\\Users\\MY HP\\Desktop\\MiniProject\\todo\\mytodo\\src\\authComponent\\config.js":"6","C:\\Users\\MY HP\\Desktop\\MiniProject\\todo\\mytodo\\src\\mainComponent\\Home.js":"7","C:\\Users\\MY HP\\Desktop\\MiniProject\\todo\\mytodo\\src\\todoComponent\\Todo.js":"8"},{"size":153,"mtime":1610737542479,"results":"9","hashOfConfig":"10"},{"size":777,"mtime":1611688778947,"results":"11","hashOfConfig":"10"},{"size":3708,"mtime":1612287418293,"results":"12","hashOfConfig":"10"},{"size":3965,"mtime":1612288035489,"results":"13","hashOfConfig":"10"},{"size":316,"mtime":1612213437025,"results":"14","hashOfConfig":"10"},{"size":568,"mtime":1611779819555,"results":"15","hashOfConfig":"10"},{"size":1344,"mtime":1612215939479,"results":"16","hashOfConfig":"10"},{"size":6744,"mtime":1612283821047,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"6a0gmf",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"C:\\Users\\MY HP\\Desktop\\MiniProject\\todo\\mytodo\\src\\index.js",[],["37","38"],"C:\\Users\\MY HP\\Desktop\\MiniProject\\todo\\mytodo\\src\\App.js",[],"C:\\Users\\MY HP\\Desktop\\MiniProject\\todo\\mytodo\\src\\authComponent\\Login.js",["39","40"],"import {useState, useEffect} from \"react\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {Avatar, ThemeProvider, TextField, createMuiTheme, Button} from \"@material-ui/core\";\r\nimport {blue} from '@material-ui/core/colors';\r\nimport {auth} from \"./config\";\r\nimport overlay from \"../imgsrc/overlay.jpg\"\r\nimport '../Main.css';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n      primary: blue,\r\n    },\r\n  });\r\n\r\nconst Login = () => {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [user, setUser] = useState({});\r\n    const [error, setError] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    // useEffect(()=>{\r\n    //     auth.onAuthStateChanged((user) => {\r\n    //         if(user){\r\n    //             console.log(\"\");\r\n    //         }else{\r\n    //             console.log(\"Unable to load the user\");\r\n    //         }\r\n    //     })\r\n    // }, [])\r\n\r\n    async function login(email, password){\r\n        try {\r\n            await auth.signInWithEmailAndPassword(email, password)\r\n            .then((user) => {\r\n                setUser(user);\r\n                console.log(\"Logged in successfully\");\r\n                setError(\"\");\r\n                history.push(\"/home\");\r\n            })\r\n            .catch(err => setError(err.message))\r\n        } catch (error) {\r\n            setError(\"Unable to login\");\r\n        }\r\n    }\r\n    return(\r\n        <div className = \"main-container\">\r\n            <div className = \"left-container\">\r\n                <img src = {overlay} alt = \"login\" className = \"login-left\" />\r\n            </div>\r\n            <div className = \"login-container right-container\">\r\n              <div>\r\n                <Avatar src=\"/broken-image.jpg\" className = \"avatar\" />\r\n                <p className = \"login-txt\">Log In</p>\r\n                    <form \r\n                    onSubmit = {(e) => {\r\n                        e.preventDefault();\r\n                        login(email, password);\r\n                    }}\r\n                    method = \"POST\"\r\n                    >\r\n                    <p className = {error ? \"error-msg\": \"display-none\"}>{error}</p>\r\n                    <div>\r\n                        <ThemeProvider theme = {theme}>\r\n                            <TextField\r\n                            label=\"Email\"\r\n                            variant=\"outlined\"\r\n                            id=\"mui-theme-provider-standard-input\"\r\n                            className = \"input-fields\"\r\n                            onChange = {(e)=> setEmail(e.target.value)}\r\n                            />\r\n                            <div className = \"space\"></div>\r\n                            <TextField\r\n                            type = \"password\"\r\n                            label=\"Password\"\r\n                            variant=\"outlined\"\r\n                            id=\"mui-theme-provider-outlined-input\"\r\n                            className = \"input-fields\"\r\n                            onChange = {(e)=> setPassword(e.target.value)}\r\n                            />\r\n                        </ThemeProvider>\r\n                    </div>\r\n                    <div className = \"space\"></div>\r\n                        <Button \r\n                        variant=\"contained\" \r\n                        color=\"primary\"\r\n                        type = \"submit\"\r\n                        className = \"login-btn\"\r\n                        >\r\n                        Log In\r\n                        </Button>\r\n                    </form>\r\n                <p>Already have an accout? <Link to = \"/\">Sign up</Link></p>\r\n              </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","C:\\Users\\MY HP\\Desktop\\MiniProject\\todo\\mytodo\\src\\authComponent\\Signin.js",["41","42"],"C:\\Users\\MY HP\\Desktop\\MiniProject\\todo\\mytodo\\src\\Context.js",[],"C:\\Users\\MY HP\\Desktop\\MiniProject\\todo\\mytodo\\src\\authComponent\\config.js",[],"C:\\Users\\MY HP\\Desktop\\MiniProject\\todo\\mytodo\\src\\mainComponent\\Home.js",[],"C:\\Users\\MY HP\\Desktop\\MiniProject\\todo\\mytodo\\src\\todoComponent\\Todo.js",["43"],"import {useState, useEffect} from \"react\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {Delete} from \"@material-ui/icons\";\r\nimport firebase from \"firebase\";\r\nimport {db} from \"../authComponent/config\";\r\n\r\n//import image here\r\nimport todoLeft from \"../imgsrc/todoLeft.jpg\"\r\n//import CSS here\r\nimport \"../Main.css\";\r\n\r\n//Todo Component\r\nconst MainTodo = (props) => {\r\n\r\n    const {text, completed, timestamp} = props.todo;\r\n    const { choosenDate, dateToString} = props;\r\n    function deleteTodo(){\r\n        var date;\r\n        if(choosenDate!==\"\"){\r\n            date = choosenDate;\r\n            console.log(date);\r\n        }else{\r\n            date = dateToString(new Date());\r\n            console.log(date);\r\n        }\r\n\r\n        db.collection('users')\r\n        .doc(props.uid)\r\n        .collection('userData')\r\n        .doc(date)\r\n        .collection('todos')\r\n        .doc(props.id)\r\n        .delete()\r\n    }\r\n\r\n    function updateTodo(){\r\n        var date;\r\n        if(choosenDate!==\"\"){\r\n            date = choosenDate;\r\n            console.log(date);\r\n        }else{\r\n            date = dateToString(new Date());\r\n            console.log(date);\r\n        }\r\n\r\n        console.log(\"date\", date);\r\n        db.collection(\"users\")\r\n        .doc(props.uid)\r\n        .collection(\"userData\")\r\n        .doc(date)\r\n        .collection(\"todos\")\r\n        .doc(props.id)\r\n        .set({\r\n            text: text,\r\n            timestamp: timestamp,\r\n            completed: !completed\r\n        })\r\n\r\n    }\r\n    \r\n    return(\r\n        <div className = \"todos\">\r\n            <div>\r\n                <p>{text}</p>\r\n            </div>\r\n            <div className = \"add-btn\">\r\n                <Button variant = \"contained\" color = \"primary\"  onClick = {() => updateTodo()}>\r\n                {completed ? \"Completed\" : \"Incomplete\"}\r\n                </Button>\r\n                <Button variant = \"contained\" color = \"secondary\" onClick = {() => deleteTodo()}><Delete /></Button>            \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n//Starter TODO component\r\nconst Todo = (props) => {\r\n\r\n    const [todos, setTodos] = useState([]);\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [start, setStart] = useState(false);\r\n    const [choosenDate, setChoosenDate] = useState(\"\");\r\n\r\n    //convert date to string\r\n    function dateToString(date){\r\n        var day = date.getDate();\r\n        //month returns 0-11 as month number i.e. why we are adding 1 here\r\n        var month = date.getMonth() + 1;\r\n        var year = date.getFullYear();  \r\n        // console.log(day + \"-\" + month + \"-\" + year);\r\n        return day + \"-\" + month + \"-\" + year;\r\n    }\r\n\r\n    function handleTodos(){\r\n        var date;\r\n        if(choosenDate!==\"\"){\r\n            date = choosenDate;\r\n            console.log(date);\r\n        }else{\r\n            date = dateToString(new Date());\r\n            console.log(date);\r\n        }\r\n        \r\n        db.collection(\"users\")\r\n        .doc(props.uid)\r\n        .collection(\"userData\")\r\n        .doc(date)\r\n        .collection(\"todos\")\r\n        .add({\r\n            text: inputText,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            completed: false\r\n        })\r\n        document.querySelector(\".txt\").value = \"\";\r\n        setInputText(\"\");\r\n    }\r\n\r\n    function fetchTodos(){\r\n        var date;\r\n        if(choosenDate!==\"\"){\r\n            date = choosenDate;\r\n            console.log(date);\r\n        }else{\r\n            date = dateToString(new Date());\r\n            console.log(date);\r\n        }\r\n\r\n        console.log(\"uid of user: \", props.uid);\r\n        if(props.uid){\r\n            try{\r\n            db.collection('users')\r\n            .doc(props.uid)\r\n            .collection('userData')\r\n            .doc(date)\r\n            .collection('todos')\r\n            .orderBy(\"timestamp\", 'desc')\r\n            .onSnapshot(snapshot => {\r\n                setTodos(snapshot.docs.map(doc => ({id: doc.id, todoItem: doc.data()})));\r\n            })\r\n            }catch{\r\n                console.log(\"Unable to fetch user Data\")\r\n            }\r\n        }else{\r\n            console.log(\"Failed to load data\");\r\n        }\r\n    }\r\n\r\n    useEffect(fetchTodos, [choosenDate])\r\n\r\n    if(start){\r\n        return(\r\n            <div className = \"main-container\">\r\n                <div className = \"left-container\">\r\n                    <img src = {todoLeft} alt = \"todo-left here\" className = \"todo-left\" />\r\n                </div>\r\n                    <div className = \"right-container\">\r\n                    <div className = \"form-element\">\r\n                        <form\r\n                        onSubmit = {(e) => {\r\n                            e.preventDefault();\r\n                            handleTodos();\r\n                        }}\r\n                        >\r\n                            <input  type = \"text\"  placeholder = \"Enter Todo...\"  className = \"txt\" onChange = {(e) => {setInputText(e.target.value); }} />\r\n                            <Button  variant=\"contained\"  color=\"primary\" type = \"submit\" className = \"btn\" > ADD TODO </Button>\r\n                        </form>\r\n                    </div>\r\n                    <div className = \"date\">\r\n                    <h4>Select Todos according to Month Date</h4>\r\n                    <input type = \"date\" onChange = {(e) => {\r\n                        var date = new Date(e.target.value);\r\n                        var month = (date.getMonth() < 10 ? '' : '') + (date.getMonth()+1);\r\n                        // console.log(date.getDate() + \"-\" + month + \"-\" + date.getFullYear());\r\n                        setChoosenDate(date.getDate() + \"-\" + month + \"-\" + date.getFullYear());\r\n                    }} />\r\n                    </div>\r\n\r\n                    <div className = \"todo-container\">\r\n                        {todos.map(todo => {\r\n                            return <MainTodo \r\n                            key = {todo.id} \r\n                            todo = {todo.todoItem}\r\n                            dateToString = {dateToString} \r\n                            id = {todo.id}\r\n                            uid = {props.uid}\r\n                            choosenDate = {choosenDate}\r\n                            />\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }else{\r\n        return(\r\n            <div className = \"start-todo\">\r\n                <Button\r\n                variant=\"contained\" \r\n                color=\"primary\"\r\n                onClick = {()=> {\r\n                    setStart(true);\r\n                    fetchTodos();\r\n                }}\r\n                >Click To Start</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Todo;",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":19,"nodeType":"50","messageId":"51","endLine":1,"endColumn":28},{"ruleId":"48","severity":1,"message":"52","line":19,"column":12,"nodeType":"50","messageId":"51","endLine":19,"endColumn":16},{"ruleId":"48","severity":1,"message":"49","line":1,"column":19,"nodeType":"50","messageId":"51","endLine":1,"endColumn":28},{"ruleId":"48","severity":1,"message":"52","line":20,"column":12,"nodeType":"50","messageId":"51","endLine":20,"endColumn":16},{"ruleId":"53","severity":1,"message":"54","line":148,"column":27,"nodeType":"55","endLine":148,"endColumn":40,"suggestions":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.uid'. Either include it or remove the dependency array.","ArrayExpression",["59"],"no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: [choosenDate, props.uid]",{"range":"62","text":"63"},[4206,4219],"[choosenDate, props.uid]"]